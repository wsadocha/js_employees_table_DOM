{"mappings":"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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\n// write code here\nvar table = document.querySelector(\"table\");\nvar tBody = table.tBodies[0];\n// ADDING FORM\nvar form = document.createElement(\"form\");\nvar body = document.querySelector(\"body\");\nvar headerElements = document.querySelectorAll(\"thead tr th\");\nvar listOfNames = [];\nvar _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\ntry {\n    for(var _iterator = headerElements[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n        var headerElement = _step.value;\n        listOfNames.push(headerElement.textContent);\n    }\n} catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n} finally{\n    try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n        }\n    } finally{\n        if (_didIteratorError) {\n            throw _iteratorError;\n        }\n    }\n}\n// CREATE FORM INPUTS\nfor(var i = 0; i < listOfNames.length; i++){\n    var input = document.createElement(\"input\");\n    var label = document.createElement(\"label\");\n    // CREATE SELECT WITH OPTIONS\n    if (listOfNames[i] === \"Office\") {\n        var select = document.createElement(\"select\");\n        var selectLabel = document.createElement(\"label\");\n        var listOfOffices = [\n            \"Tokyo\",\n            \"Singapore\",\n            \"London\",\n            \"New York\",\n            \"Edinburgh\",\n            \"San Francisco\"\n        ];\n        for(var j = 0; j < listOfOffices.length; j++){\n            var option = document.createElement(\"option\");\n            option.innerText = option.value = listOfOffices[j];\n            select.name = select.dataset.qa = listOfNames[i].toLowerCase();\n            select.append(option);\n        }\n        selectLabel.innerText = listOfNames[i] + \":\";\n        selectLabel.append(select);\n        form.append(selectLabel);\n        continue;\n    }\n    // END SELECT\n    input.name = input.dataset.qa = listOfNames[i].toLowerCase();\n    if (input.name === \"age\" || input.name === \"salary\") input.type = \"number\";\n    else input.type = \"text\";\n    input.required = true;\n    label.innerText = listOfNames[i] + \":\";\n    label.append(input);\n    form.className = \"new-employee-form\";\n    form.append(label);\n}\n// END FORM INPUTS\n// CREATE BUTTON\nvar button = document.createElement(\"button\");\nbutton.type = \"submit\";\nbutton.innerText = \"Save to table\";\nform.append(button);\n// END BUTTON\nbody.firstElementChild.after(form);\n// END FORM\ntable.addEventListener(\"click\", function(e) {\n    if (e.target.parentElement.parentElement.tagName === \"THEAD\") sortTable(e.target);\n    if (e.target.tagName === \"TD\") highlightRow(e.target.parentElement);\n});\nform.addEventListener(\"submit\", function(e) {\n    e.preventDefault();\n    if (validateForm()) {\n        var newRow = tBody.insertRow(-1);\n        var listOfValues = [];\n        for(var i = 0; i < form.length - 1; i++){\n            var value = form[i].value;\n            if (form[i].name === \"salary\") value = prepareSalary(value);\n            listOfValues.push(value);\n        }\n        for(var i1 = 0; i1 < form.length - 1; i1++){\n            var newCell = newRow.insertCell(i1);\n            newCell.textContent = listOfValues[i1];\n        }\n        form.reset();\n    }\n});\ntBody.addEventListener(\"dblclick\", function(e) {\n    handleDoubleClick(e.target);\n});\nfunction sortTable(head) {\n    // GET CHOSEN COLUMN\n    var header = head.innerText;\n    var headers = document.querySelectorAll(\"thead tr th\");\n    var tableColumn;\n    for(var i = 0; i < headers.length; i++)if (headers[i].innerText === header) tableColumn = i;\n    // CREATE AND SORT ELEMENTS IN THE COLUMN\n    var list = [];\n    for(var i1 = 0; i1 < tBody.rows.length; i1++)list.push(tBody.rows[i1].cells[tableColumn].innerText);\n    if (header === \"Salary\" || header === \"Age\") list.sort(function(a, b) {\n        var x = +a.replace(/[$,]/ig, \"\");\n        var y = +b.replace(/[$,]/ig, \"\");\n        if (head.className === \"sorted\") return y - x;\n        return x - y;\n    });\n    else list.sort(function(a, b) {\n        if (head.className === \"sorted\") return b.localeCompare(a);\n        return a.localeCompare(b);\n    });\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    try {\n        // SORT ROWS IN TABLE\n        for(var _iterator = list[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var element = _step.value;\n            for(var i2 = 0; i2 < tBody.children.length; i2++)if (element === tBody.rows[i2].cells[tableColumn].innerHTML) {\n                var tRow = tBody.rows[i2];\n                tBody.append(tRow);\n            }\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n    // ADDING AND DELETING CLASS OF TH's\n    if (head.className !== \"sorted\") head.className = \"sorted\";\n    else head.className = \"\";\n    var listOfHeaders = head.parentElement.children;\n    var _iteratorNormalCompletion1 = true, _didIteratorError1 = false, _iteratorError1 = undefined;\n    try {\n        for(var _iterator1 = listOfHeaders[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true){\n            var th = _step1.value;\n            if (th === head) continue;\n            th.className = \"\";\n        }\n    } catch (err) {\n        _didIteratorError1 = true;\n        _iteratorError1 = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion1 && _iterator1.return != null) {\n                _iterator1.return();\n            }\n        } finally{\n            if (_didIteratorError1) {\n                throw _iteratorError1;\n            }\n        }\n    }\n}\nfunction highlightRow(row) {\n    var rows = row.parentElement.children;\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    try {\n        for(var _iterator = rows[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var r = _step.value;\n            if (r.className === \"active\") r.className = \"\";\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n    row.className = \"active\";\n}\nfunction prepareSalary(text) {\n    var x = \"$\" + Number(text).toLocaleString(\"en-US\");\n    return x;\n}\nfunction validateForm() {\n    if (body.lastElementChild.tagName === \"DIV\") body.removeChild(body.lastElementChild);\n    var notification = document.createElement(\"div\");\n    var title = document.createElement(\"p\");\n    setTimeout(function() {\n        return body.removeChild(notification);\n    }, 3000);\n    notification.className = \"notification\";\n    title.className = \"title\";\n    if (form[0].value.length < 4) {\n        notification.className += \" error\";\n        notification.textContent = \"Name should have minimum 4 characters\";\n        title.textContent = \"Wrong name value\";\n        notification.prepend(title);\n        body.append(notification);\n        return false;\n    } else if (form[3].value < 18 || form[3].value > 90) {\n        notification.className += \" error\";\n        notification.textContent = \"Age should be between 18 and 90 years old\";\n        title.textContent = \"Wrong age value\";\n        notification.prepend(title);\n        body.append(notification);\n        return false;\n    }\n    notification.className += \" success\";\n    notification.textContent = \"New employee has been created\";\n    title.textContent = \"Good job!\";\n    notification.prepend(title);\n    body.append(notification);\n    return true;\n}\nfunction handleDoubleClick(td) {\n    var text = td.innerText;\n    var input = document.createElement(\"input\");\n    var age = td.parentElement.children[3];\n    var salary = td.parentElement.children[4];\n    var handleInput = function() {\n        if (input.name === \"salary\") td.innerText = prepareSalary(input.value);\n        else td.innerText = input.value.trim() || text;\n    };\n    td.innerText = \"\";\n    input.value = text;\n    input.className = \"cell-input\";\n    if (td === age) input.type = \"number\";\n    if (td === salary) {\n        input.value = parseFloat(text.replace(/[$,]/g, \"\"));\n        input.type = \"number\";\n        input.name = \"salary\";\n    }\n    td.append(input);\n    input.focus();\n    input.addEventListener(\"blur\", function() {\n        handleInput();\n    });\n    input.addEventListener(\"keypress\", function(key) {\n        if (key.key === \"Enter\") handleInput();\n    });\n}\n\n//# sourceMappingURL=index.3a70d5a9.js.map\n","'use strict';\n\n// write code here\nconst table = document.querySelector('table');\nconst tBody = table.tBodies[0];\n// ADDING FORM\nconst form = document.createElement('form');\nconst body = document.querySelector('body');\nconst headerElements = document.querySelectorAll('thead tr th');\nconst listOfNames = [];\n\nfor (const headerElement of headerElements) {\n  listOfNames.push(headerElement.textContent);\n}\n\n// CREATE FORM INPUTS\nfor (let i = 0; i < listOfNames.length; i++) {\n  const input = document.createElement('input');\n  const label = document.createElement('label');\n\n  // CREATE SELECT WITH OPTIONS\n  if (listOfNames[i] === 'Office') {\n    const select = document.createElement('select');\n    const selectLabel = document.createElement('label');\n    const listOfOffices = [\n      'Tokyo',\n      'Singapore',\n      'London',\n      'New York',\n      'Edinburgh',\n      'San Francisco',\n    ];\n\n    for (let j = 0; j < listOfOffices.length; j++) {\n      const option = document.createElement('option');\n\n      option.innerText = option.value = listOfOffices[j];\n\n      select.name = select.dataset.qa = listOfNames[i].toLowerCase();\n\n      select.append(option);\n    }\n\n    selectLabel.innerText = listOfNames[i] + ':';\n\n    selectLabel.append(select);\n    form.append(selectLabel);\n    continue;\n  }\n  // END SELECT\n\n  input.name = input.dataset.qa = listOfNames[i].toLowerCase();\n\n  if (input.name === 'age' || input.name === 'salary') {\n    input.type = 'number';\n  } else {\n    input.type = 'text';\n  }\n\n  input.required = true;\n\n  label.innerText = listOfNames[i] + ':';\n  label.append(input);\n\n  form.className = 'new-employee-form';\n  form.append(label);\n}\n// END FORM INPUTS\n\n// CREATE BUTTON\nconst button = document.createElement('button');\n\nbutton.type = 'submit';\nbutton.innerText = 'Save to table';\n\nform.append(button);\n// END BUTTON\n\nbody.firstElementChild.after(form);\n// END FORM\n\ntable.addEventListener('click', e => {\n  if (e.target.parentElement.parentElement.tagName === 'THEAD') {\n    sortTable(e.target);\n  }\n\n  if (e.target.tagName === 'TD') {\n    highlightRow(e.target.parentElement);\n  }\n});\n\nform.addEventListener('submit', e => {\n  e.preventDefault();\n\n  if (validateForm()) {\n    const newRow = tBody.insertRow(-1);\n    const listOfValues = [];\n\n    for (let i = 0; i < form.length - 1; i++) {\n      let value = form[i].value;\n\n      if (form[i].name === 'salary') {\n        value = prepareSalary(value);\n      }\n\n      listOfValues.push(value);\n    }\n\n    for (let i = 0; i < form.length - 1; i++) {\n      const newCell = newRow.insertCell(i);\n\n      newCell.textContent = listOfValues[i];\n    }\n\n    form.reset();\n  }\n});\n\ntBody.addEventListener('dblclick', e => {\n  handleDoubleClick(e.target);\n});\n\nfunction sortTable(head) {\n  // GET CHOSEN COLUMN\n  const header = head.innerText;\n  const headers = document.querySelectorAll('thead tr th');\n  let tableColumn;\n\n  for (let i = 0; i < headers.length; i++) {\n    if (headers[i].innerText === header) {\n      tableColumn = i;\n    }\n  }\n\n  // CREATE AND SORT ELEMENTS IN THE COLUMN\n  const list = [];\n\n  for (let i = 0; i < tBody.rows.length; i++) {\n    list.push(tBody.rows[i].cells[tableColumn].innerText);\n  }\n\n  if (header === 'Salary' || header === 'Age') {\n    list.sort((a, b) => {\n      const x = +a.replace(/[$,]/ig, '');\n      const y = +b.replace(/[$,]/ig, '');\n\n      if (head.className === 'sorted') {\n        return y - x;\n      }\n\n      return x - y;\n    });\n  } else {\n    list.sort((a, b) => {\n      if (head.className === 'sorted') {\n        return b.localeCompare(a);\n      }\n\n      return a.localeCompare(b);\n    });\n  }\n\n  // SORT ROWS IN TABLE\n  for (const element of list) {\n    for (let i = 0; i < tBody.children.length; i++) {\n      if (element === tBody.rows[i].cells[tableColumn].innerHTML) {\n        const tRow = tBody.rows[i];\n\n        tBody.append(tRow);\n      }\n    }\n  }\n\n  // ADDING AND DELETING CLASS OF TH's\n  if (head.className !== 'sorted') {\n    head.className = 'sorted';\n  } else {\n    head.className = '';\n  }\n\n  const listOfHeaders = head.parentElement.children;\n\n  for (const th of listOfHeaders) {\n    if (th === head) {\n      continue;\n    }\n\n    th.className = '';\n  }\n}\n\nfunction highlightRow(row) {\n  const rows = row.parentElement.children;\n\n  for (const r of rows) {\n    if (r.className === 'active') {\n      r.className = '';\n    }\n  }\n\n  row.className = 'active';\n}\n\nfunction prepareSalary(text) {\n  const x = '$' + Number(text).toLocaleString('en-US');\n\n  return x;\n}\n\nfunction validateForm() {\n  if (body.lastElementChild.tagName === 'DIV') {\n    body.removeChild(body.lastElementChild);\n  }\n\n  const notification = document.createElement('div');\n  const title = document.createElement('p');\n\n  setTimeout(() => body.removeChild(notification), 3000);\n\n  notification.className = 'notification';\n  title.className = 'title';\n\n  if (form[0].value.length < 4) {\n    notification.className += ' error';\n    notification.textContent = 'Name should have minimum 4 characters';\n    title.textContent = 'Wrong name value';\n\n    notification.prepend(title);\n    body.append(notification);\n\n    return false;\n  } else if (form[3].value < 18 || form[3].value > 90) {\n    notification.className += ' error';\n    notification.textContent = 'Age should be between 18 and 90 years old';\n    title.textContent = 'Wrong age value';\n\n    notification.prepend(title);\n    body.append(notification);\n\n    return false;\n  }\n\n  notification.className += ' success';\n  notification.textContent = 'New employee has been created';\n  title.textContent = 'Good job!';\n\n  notification.prepend(title);\n  body.append(notification);\n\n  return true;\n}\n\nfunction handleDoubleClick(td) {\n  const text = td.innerText;\n  const input = document.createElement('input');\n  const age = td.parentElement.children[3];\n  const salary = td.parentElement.children[4];\n  const handleInput = () => {\n    if (input.name === 'salary') {\n      td.innerText = prepareSalary(input.value);\n    } else {\n      td.innerText = input.value.trim() || text;\n    }\n  };\n\n  td.innerText = '';\n\n  input.value = text;\n  input.className = 'cell-input';\n\n  if (td === age) {\n    input.type = 'number';\n  }\n\n  if (td === salary) {\n    input.value = parseFloat(text.replace(/[$,]/g, ''));\n    input.type = 'number';\n    input.name = 'salary';\n  }\n\n  td.append(input);\n  input.focus();\n\n  input.addEventListener('blur', () => {\n    handleInput();\n  });\n\n  input.addEventListener('keypress', key => {\n    if (key.key === 'Enter') {\n      handleInput();\n    }\n  });\n}\n"],"names":["table","document","querySelector","tBody","tBodies","form","createElement","body","headerElements","querySelectorAll","listOfNames","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","headerElement","value","push","textContent","err","return","i","length","input","label","select","selectLabel","listOfOffices","j","option","innerText","name","dataset","qa","toLowerCase","append","type","required","className","button","prepareSalary","text","Number","toLocaleString","firstElementChild","after","addEventListener","e","target","parentElement","tagName","sortTable","head","header","headers","tableColumn","list","i1","rows","cells","sort","a","b","x","replace","y","localeCompare","element","i2","children","innerHTML","tRow","listOfHeaders","_iteratorNormalCompletion1","_didIteratorError1","_iteratorError1","_step1","_iterator1","th","highlightRow","row","r","notification","title","preventDefault","lastElementChild","removeChild","setTimeout","prepend","newRow","insertRow","listOfValues","newCell","insertCell","reset","td","age","salary","handleInput","trim","parseFloat","focus","key"],"version":3,"file":"index.3a70d5a9.js.map"}